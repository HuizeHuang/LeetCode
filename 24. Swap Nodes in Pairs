/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    // 见ipad笔记！
    // Approach 1 - Iteratively
    // time O(n) space O(1)
    /*
    public ListNode swapPairs(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode current = dummy;
        
        while(current.next != null && current.next.next != null){
            ListNode first = current.next;
            ListNode second = current.next.next;
            current.next = second;
            first.next = second.next;
            second.next = first;
            current = first;
        }
        
        return dummy.next;
    }
    */
    
    // Approach 2 - Recursively
    // time O(n) space O(n)
    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null) 
            return head;
        ListNode n = head.next;
        head.next = swapPairs(head.next.next);
        n.next = head;
        return n;
    }
}
